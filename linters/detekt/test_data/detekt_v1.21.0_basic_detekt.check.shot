// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing linter detekt test basic_detekt 1`] = `
{
  "issues": [
    {
      "code": "detekt.style.MagicNumber",
      "column": "15",
      "file": "test_data/basic_detekt.in.kt",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "level": "LEVEL_MEDIUM",
      "line": "16",
      "linter": "detekt",
      "message": "This expression contains a magic number. Consider defining it to a well named constant.",
      "ranges": [
        {
          "filePath": "test_data/basic_detekt.in.kt",
          "length": "1",
          "offset": "229",
        },
      ],
      "targetType": "kotlin",
    },
    {
      "code": "detekt.style.MagicNumber",
      "column": "3",
      "file": "test_data/basic_detekt.in.kt",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "level": "LEVEL_MEDIUM",
      "line": "23",
      "linter": "detekt",
      "message": "This expression contains a magic number. Consider defining it to a well named constant.",
      "ranges": [
        {
          "filePath": "test_data/basic_detekt.in.kt",
          "length": "2",
          "offset": "282",
        },
      ],
      "targetType": "kotlin",
    },
    {
      "code": "detekt.naming.InvalidPackageDeclaration",
      "column": "1",
      "file": "test_data/basic_detekt.in.kt",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "level": "LEVEL_MEDIUM",
      "line": "3",
      "linter": "detekt",
      "message": "The package declaration does not match the actual file location.",
      "ranges": [
        {
          "filePath": "test_data/basic_detekt.in.kt",
          "length": "13",
          "offset": "46",
        },
      ],
      "targetType": "kotlin",
    },
    {
      "code": "detekt.style.FunctionOnlyReturningConstant",
      "column": "5",
      "file": "test_data/basic_detekt.in.kt",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "level": "LEVEL_MEDIUM",
      "line": "5",
      "linter": "detekt",
      "message": "constantInt is returning a constant. Prefer declaring a constant instead.",
      "ranges": [
        {
          "filePath": "test_data/basic_detekt.in.kt",
          "length": "11",
          "offset": "65",
        },
      ],
      "targetType": "kotlin",
    },
    {
      "code": "detekt.potential-bugs.EqualsWithHashCodeExist",
      "column": "12",
      "file": "test_data/basic_detekt.in.kt",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "level": "LEVEL_MEDIUM",
      "line": "9",
      "linter": "detekt",
      "message": "A class should always override hashCode when overriding equals and the other way around.",
      "ranges": [
        {
          "filePath": "test_data/basic_detekt.in.kt",
          "length": "14",
          "offset": "114",
        },
      ],
      "targetType": "kotlin",
    },
  ],
  "lintActions": [
    {
      "command": "lint",
      "fileGroupName": "kotlin",
      "linter": "detekt",
      "paths": [
        "test_data/basic_detekt.in.kt",
      ],
      "verb": "TRUNK_VERB_CHECK",
    },
    {
      "command": "lint",
      "fileGroupName": "kotlin",
      "linter": "detekt",
      "paths": [
        "test_data/basic_detekt.in.kt",
      ],
      "upstream": true,
      "verb": "TRUNK_VERB_CHECK",
    },
  ],
  "taskFailures": [],
  "unformattedFiles": [],
}
`;
