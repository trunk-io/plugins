version: 0.1
downloads:
  - name: tflint
    version: 0.35.0
    downloads:
      # macos arm64 was introduced after this version.
      - os: macos
        url: https://github.com/terraform-linters/tflint/releases/download/v${version}/tflint_darwin_amd64.zip
        version: <0.29.1
      - os:
          linux: linux
          macos: darwin
          windows: windows
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/terraform-linters/tflint/releases/download/v${version}/tflint_${os}_${cpu}.zip
tools:
  definitions:
    - name: tflint
      download: tflint
      shims: [tflint]
      known_good_version: 0.35.0
lint:
  definitions:
    - name: tflint
      files: [terraform]
      commands:
        # KNOBS TO TURN:
        # - run_from
        # - target
        # - --chdir (config must be in resulting dir)
        # - --recursive is not a viable option

        # - name: lint
        #   output: sarif
        #   prepare_run: tflint --init
        #   run: tflint --format=sarif --force
        #   # run: tflint --format=sarif --force --chdir=${target}
        #   success_codes: [0, 1, 2]
        #   read_output_from: stdout
        #   # tflint can only run on the current directory unless --recursive is passed
        #   target: ${parent}
        #   run_from: ${root_or_parent_with(.tflint.hcl)}
        #   version: ">=0.47.0"
        #   sandbox_type: expanded
        - name: lint
          output: sarif
          prepare_run: tflint --init
          run: tflint --format=sarif --force
          success_codes: [0, 1, 2]
          read_output_from: stdout
          # tflint can only run on the current directory unless --recursive is passed
          target: ${parent}
          run_from: ${target_directory}

          # These would work except we get an error for File() failed on a directory
          # run: tflint --format=sarif --force --chdir=${target}
          # run_from: ${root_or_parent_with(.tflint.hcl)}

          # NOTE(Tyler): This approach works, but it has some weird caveats where the upstream doesn't get the current config if it was deleted...
          # This contrasts from most of our behavior, where the upstream should get run with the current config...
          version: ">=0.47.0"
          sandbox_type: expanded
        - name: lint
          output: sarif
          prepare_run: tflint --init
          run: tflint --format=sarif ${target} --force
          success_codes: [0, 1]
          read_output_from: stdout
          run_from: ${root_or_parent_with(.tflint.hcl)}
      suggest_if: files_present
      tools: [tflint]
      direct_configs: [.tflint.hcl]
      environment:
        - name: PATH
          list: ["${linter}"]
        - name: TFLINT_PLUGIN_DIR
          value: ${shared_cachedir}
        - name: GITHUB_TOKEN
          value: ${env.GITHUB_TOKEN}
          optional: true
        # - name: TFLINT_CONFIG_FILE
        #   value: ${workspace}/.tflint.hcl
        - name: TFLINT_LOG
          value: debug
      known_good_version: 0.35.0
      version_command:
        parse_regex: ${semver}
        run: tflint --version

      symlinks:
        # TODO(Tyler): Remove this block once we can do hierarchical sandboxes.
        # symlink the tool node_modules into the sandbox. this enables
        # the hermetic tool to run correctly with plugins

        # - from: ${workspace}/a.txt
        #   to: a.txt

        - from: ${sandbox}/.tflint.hcl
          to: ${run_from}/.tflint.hcl
