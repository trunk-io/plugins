// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing linter mypy test CUSTOM 1`] = `
{
  "issues": [
    {
      "code": "import",
      "column": "1",
      "file": "test_data/basic.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://mypy.readthedocs.io/en/stable/error_code_list.html",
      "level": "LEVEL_HIGH",
      "line": "1",
      "linter": "mypy",
      "message": "Library stubs not installed for "google.protobuf"",
      "targetType": "python",
    },
    {
      "code": "import",
      "column": "1",
      "file": "test_data/basic.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://mypy.readthedocs.io/en/stable/error_code_list.html",
      "level": "LEVEL_HIGH",
      "line": "1",
      "linter": "mypy",
      "message": "Library stubs not installed for "google.protobuf.descriptor_pb2"",
      "targetType": "python",
    },
    {
      "code": "note",
      "column": "1",
      "file": "test_data/basic.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://mypy.readthedocs.io/en/stable/error_code_list.html",
      "level": "LEVEL_HIGH",
      "line": "1",
      "linter": "mypy",
      "message": "Hint: "python3 -m pip install types-protobuf". (or run "mypy --install-types" to install all missing stub packages). See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports",
      "targetType": "python",
    },
    {
      "code": "arg-type",
      "column": "10",
      "file": "test_data/basic.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://mypy.readthedocs.io/en/stable/error_code_list.html",
      "level": "LEVEL_HIGH",
      "line": "13",
      "linter": "mypy",
      "message": "Argument 1 to "greeting" has incompatible type "int"; expected "str"",
      "targetType": "python",
    },
    {
      "code": "arg-type",
      "column": "10",
      "file": "test_data/basic.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://mypy.readthedocs.io/en/stable/error_code_list.html",
      "level": "LEVEL_HIGH",
      "line": "14",
      "linter": "mypy",
      "message": "Argument 1 to "greeting" has incompatible type "bytes"; expected "str"",
      "targetType": "python",
    },
    {
      "code": "func-returns-value",
      "column": "5",
      "file": "test_data/basic.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://mypy.readthedocs.io/en/stable/error_code_list.html",
      "level": "LEVEL_HIGH",
      "line": "15",
      "linter": "mypy",
      "message": ""printer" does not return a value",
      "targetType": "python",
    },
    {
      "code": "assignment",
      "column": "10",
      "file": "test_data/basic.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://mypy.readthedocs.io/en/stable/error_code_list.html",
      "level": "LEVEL_HIGH",
      "line": "16",
      "linter": "mypy",
      "message": "Incompatible types in assignment (expression has type "int", variable has type "str")",
      "targetType": "python",
    },
    {
      "code": "attr-defined",
      "column": "1",
      "file": "test_data/basic.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://mypy.readthedocs.io/en/stable/error_code_list.html",
      "level": "LEVEL_HIGH",
      "line": "3",
      "linter": "mypy",
      "message": "Module "test_data" has no attribute "mypy_import2"",
      "targetType": "python",
    },
    {
      "code": "return",
      "column": "1",
      "file": "test_data/source.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://mypy.readthedocs.io/en/stable/error_code_list.html",
      "level": "LEVEL_HIGH",
      "line": "8",
      "linter": "mypy",
      "message": "Missing return statement",
      "targetType": "python",
    },
  ],
  "lintActions": [
    {
      "command": "lint",
      "fileGroupName": "python",
      "linter": "mypy",
      "paths": [
        "test_data/__init__.py",
      ],
      "verb": "TRUNK_VERB_CHECK",
    },
    {
      "command": "lint",
      "fileGroupName": "python",
      "linter": "mypy",
      "paths": [
        "test_data/basic.py",
      ],
      "verb": "TRUNK_VERB_CHECK",
    },
    {
      "command": "lint",
      "fileGroupName": "python",
      "linter": "mypy",
      "paths": [
        "test_data/source.py",
      ],
      "verb": "TRUNK_VERB_CHECK",
    },
    {
      "command": "lint",
      "fileGroupName": "python",
      "linter": "mypy",
      "paths": [
        "test_data/__init__.py",
      ],
      "upstream": true,
      "verb": "TRUNK_VERB_CHECK",
    },
    {
      "command": "lint",
      "fileGroupName": "python",
      "linter": "mypy",
      "paths": [
        "test_data/basic.py",
      ],
      "upstream": true,
      "verb": "TRUNK_VERB_CHECK",
    },
    {
      "command": "lint",
      "fileGroupName": "python",
      "linter": "mypy",
      "paths": [
        "test_data/source.py",
      ],
      "upstream": true,
      "verb": "TRUNK_VERB_CHECK",
    },
  ],
  "taskFailures": [],
  "unformattedFiles": [],
}
`;
