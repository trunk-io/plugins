// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing linter codespell test dictionary 1`] = `
{
  "issues": [
    {
      "code": "misspelled",
      "file": "test_data/basic_py.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "level": "LEVEL_HIGH",
      "line": "20",
      "linter": "codespell",
      "message": "lamda ==> lambda",
      "targetType": "ALL",
    },
    {
      "code": "misspelled",
      "file": "test_data/basic_py.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "level": "LEVEL_HIGH",
      "line": "22",
      "linter": "codespell",
      "message": "anme ==> name, anime",
      "targetType": "ALL",
    },
    {
      "code": "misspelled",
      "file": "test_data/basic_ts.in.ts",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "level": "LEVEL_HIGH",
      "line": "17",
      "linter": "codespell",
      "message": "callbakc ==> callback",
      "targetType": "ALL",
    },
    {
      "code": "misspelled",
      "file": "test_data/basic_ts.in.ts",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "level": "LEVEL_HIGH",
      "line": "19",
      "linter": "codespell",
      "message": "asnyc ==> async",
      "targetType": "ALL",
    },
  ],
  "lintActions": [
    {
      "command": "lint",
      "fileGroupName": "ALL",
      "linter": "codespell",
      "paths": [
        "test_data/basic_md.in.md",
      ],
      "verb": "TRUNK_VERB_CHECK",
    },
    {
      "command": "lint",
      "fileGroupName": "ALL",
      "linter": "codespell",
      "paths": [
        "test_data/basic_py.in.py",
      ],
      "verb": "TRUNK_VERB_CHECK",
    },
    {
      "command": "lint",
      "fileGroupName": "ALL",
      "linter": "codespell",
      "paths": [
        "test_data/basic_ts.in.ts",
      ],
      "verb": "TRUNK_VERB_CHECK",
    },
    {
      "command": "lint",
      "fileGroupName": "ALL",
      "linter": "codespell",
      "paths": [
        "test_data/empty.in.txt",
      ],
      "verb": "TRUNK_VERB_CHECK",
    },
    {
      "command": "lint",
      "fileGroupName": "ALL",
      "linter": "codespell",
      "paths": [
        "test_data/basic_md.in.md",
      ],
      "upstream": true,
      "verb": "TRUNK_VERB_CHECK",
    },
    {
      "command": "lint",
      "fileGroupName": "ALL",
      "linter": "codespell",
      "paths": [
        "test_data/basic_py.in.py",
      ],
      "upstream": true,
      "verb": "TRUNK_VERB_CHECK",
    },
    {
      "command": "lint",
      "fileGroupName": "ALL",
      "linter": "codespell",
      "paths": [
        "test_data/basic_ts.in.ts",
      ],
      "upstream": true,
      "verb": "TRUNK_VERB_CHECK",
    },
    {
      "command": "lint",
      "fileGroupName": "ALL",
      "linter": "codespell",
      "paths": [
        "test_data/empty.in.txt",
      ],
      "upstream": true,
      "verb": "TRUNK_VERB_CHECK",
    },
  ],
  "taskFailures": [],
  "unformattedFiles": [],
}
`;
