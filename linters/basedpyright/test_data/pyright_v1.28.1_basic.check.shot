// Jest Snapshot v1, https://goo.gl/fbAQLP
// trunk-upgrade-validation:RELEASE

exports[`Testing linter basedpyright test basic 1`] = `
{
  "issues": [
    {
      "code": "reportUnusedImport",
      "column": "20",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUnusedImport",
      "level": "LEVEL_MEDIUM",
      "line": "1",
      "linter": "basedpyright",
      "message": "Import "Callable" is not accessed",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "8",
          "offset": "19",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportDeprecated",
      "column": "30",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportDeprecated",
      "level": "LEVEL_MEDIUM",
      "line": "1",
      "linter": "basedpyright",
      "message": "This type is deprecated as of Python 3.9; use "collections.abc.Iterator" instead",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "8",
          "offset": "29",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportUnusedImport",
      "column": "30",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUnusedImport",
      "level": "LEVEL_MEDIUM",
      "line": "1",
      "linter": "basedpyright",
      "message": "Import "Iterator" is not accessed",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "8",
          "offset": "29",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportDeprecated",
      "column": "40",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportDeprecated",
      "level": "LEVEL_MEDIUM",
      "line": "1",
      "linter": "basedpyright",
      "message": "This type is deprecated as of Python 3.10; use "|" instead",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "5",
          "offset": "39",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportUnusedImport",
      "column": "40",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUnusedImport",
      "level": "LEVEL_MEDIUM",
      "line": "1",
      "linter": "basedpyright",
      "message": "Import "Union" is not accessed",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "5",
          "offset": "39",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportDeprecated",
      "column": "47",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportDeprecated",
      "level": "LEVEL_MEDIUM",
      "line": "1",
      "linter": "basedpyright",
      "message": "This type is deprecated as of Python 3.10; use "| None" instead",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "8",
          "offset": "46",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportUnusedImport",
      "column": "47",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUnusedImport",
      "level": "LEVEL_MEDIUM",
      "line": "1",
      "linter": "basedpyright",
      "message": "Import "Optional" is not accessed",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "8",
          "offset": "46",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportAttributeAccessIssue",
      "column": "57",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportAttributeAccessIssue",
      "level": "LEVEL_HIGH",
      "line": "1",
      "linter": "basedpyright",
      "message": ""Enum" is unknown import symbol",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "4",
          "offset": "56",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportUnknownVariableType",
      "column": "57",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUnknownVariableType",
      "level": "LEVEL_MEDIUM",
      "line": "1",
      "linter": "basedpyright",
      "message": "Type of "Enum" is unknown",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "4",
          "offset": "56",
        },
      ],
      "targetType": "python",
    },
    {
      "column": "13",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#",
      "level": "LEVEL_LOW",
      "line": "15",
      "linter": "basedpyright",
      "message": "Type of "a.x" is "int | str"",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "3",
          "offset": "384",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportAttributeAccessIssue",
      "column": "3",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportAttributeAccessIssue",
      "level": "LEVEL_HIGH",
      "line": "18",
      "linter": "basedpyright",
      "message": "Cannot assign to attribute "x" for class "A"
  Expression of type "float" cannot be assigned to attribute "x" of class "A"
    Type "float" is not assignable to type "int | str"
      "float" is not assignable to "int"
      "float" is not assignable to "str"",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "1",
          "offset": "467",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportUnknownVariableType",
      "column": "5",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUnknownVariableType",
      "level": "LEVEL_MEDIUM",
      "line": "24",
      "linter": "basedpyright",
      "message": "Type of "y" is unknown",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "1",
          "offset": "609",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportUndefinedVariable",
      "column": "8",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUndefinedVariable",
      "level": "LEVEL_HIGH",
      "line": "24",
      "linter": "basedpyright",
      "message": ""ClassVar" is not defined",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "8",
          "offset": "612",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportUnannotatedClassAttribute",
      "column": "14",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUnannotatedClassAttribute",
      "level": "LEVEL_MEDIUM",
      "line": "27",
      "linter": "basedpyright",
      "message": "Type annotation for attribute `z` is required because this class is not decorated with `@final`",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "1",
          "offset": "690",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportUnknownArgumentType",
      "column": "7",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUnknownArgumentType",
      "level": "LEVEL_MEDIUM",
      "line": "30",
      "linter": "basedpyright",
      "message": "Argument type is unknown
  Argument corresponds to parameter "values" in function "print"",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "3",
          "offset": "739",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportUnknownMemberType",
      "column": "7",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUnknownMemberType",
      "level": "LEVEL_MEDIUM",
      "line": "30",
      "linter": "basedpyright",
      "message": "Type of "y" is unknown",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "3",
          "offset": "739",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportUnknownArgumentType",
      "column": "7",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUnknownArgumentType",
      "level": "LEVEL_MEDIUM",
      "line": "31",
      "linter": "basedpyright",
      "message": "Argument type is unknown
  Argument corresponds to parameter "values" in function "print"",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "3",
          "offset": "750",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportUnknownMemberType",
      "column": "7",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUnknownMemberType",
      "level": "LEVEL_MEDIUM",
      "line": "31",
      "linter": "basedpyright",
      "message": "Type of "z" is unknown",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "3",
          "offset": "750",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportAttributeAccessIssue",
      "column": "9",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportAttributeAccessIssue",
      "level": "LEVEL_HIGH",
      "line": "31",
      "linter": "basedpyright",
      "message": "Cannot access attribute "z" for class "type[A]"
  Attribute "z" is unknown",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "1",
          "offset": "752",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportUntypedBaseClass",
      "column": "13",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUntypedBaseClass",
      "level": "LEVEL_MEDIUM",
      "line": "35",
      "linter": "basedpyright",
      "message": "Base class type is unknown, obscuring type of derived class",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "4",
          "offset": "818",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportUnannotatedClassAttribute",
      "column": "5",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUnannotatedClassAttribute",
      "level": "LEVEL_MEDIUM",
      "line": "36",
      "linter": "basedpyright",
      "message": "Type annotation for attribute `RED` is required because this class is not decorated with `@final`",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "3",
          "offset": "829",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportUnannotatedClassAttribute",
      "column": "5",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUnannotatedClassAttribute",
      "level": "LEVEL_MEDIUM",
      "line": "37",
      "linter": "basedpyright",
      "message": "Type annotation for attribute `BLUE` is required because this class is not decorated with `@final`",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "4",
          "offset": "841",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportReturnType",
      "column": "29",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportReturnType",
      "level": "LEVEL_HIGH",
      "line": "39",
      "linter": "basedpyright",
      "message": "Function with declared return type "bool" must return value on all code paths
  "None" is not assignable to "bool"",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "4",
          "offset": "879",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportReturnType",
      "column": "12",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportReturnType",
      "level": "LEVEL_HIGH",
      "line": "5",
      "linter": "basedpyright",
      "message": "Type "int" is not assignable to return type "str"
  "int" is not assignable to "str"",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "1",
          "offset": "105",
        },
      ],
      "targetType": "python",
    },
    {
      "column": "25",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#",
      "level": "LEVEL_LOW",
      "line": "51",
      "linter": "basedpyright",
      "message": "Type of "val" is "int"",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "3",
          "offset": "1143",
        },
      ],
      "targetType": "python",
    },
    {
      "column": "39",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#",
      "level": "LEVEL_LOW",
      "line": "54",
      "linter": "basedpyright",
      "message": "Type of "val" is "int"",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "3",
          "offset": "1259",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportUnusedCallResult",
      "column": "9",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUnusedCallResult",
      "level": "LEVEL_MEDIUM",
      "line": "57",
      "linter": "basedpyright",
      "message": "Result of call expression is of type "int" and is not used; assign to variable "_" if this is intentional",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "9",
          "offset": "1295",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportRedeclaration",
      "column": "7",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportRedeclaration",
      "level": "LEVEL_MEDIUM",
      "line": "7",
      "linter": "basedpyright",
      "message": "Class declaration "A" is obscured by a declaration of the same name",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "1",
          "offset": "183",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportUnannotatedClassAttribute",
      "column": "14",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUnannotatedClassAttribute",
      "level": "LEVEL_MEDIUM",
      "line": "9",
      "linter": "basedpyright",
      "message": "Type annotation for attribute `x` is required because this class is not decorated with `@final`",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "1",
          "offset": "230",
        },
      ],
      "targetType": "python",
    },
    {
      "code": "reportUninitializedInstanceVariable",
      "column": "14",
      "file": "test_data/basic.in.py",
      "issueClass": "ISSUE_CLASS_EXISTING",
      "issueUrl": "https://github.com/DetachHead/basedpyright/blob/main/docs/configuration/config-files.md#reportUninitializedInstanceVariable",
      "level": "LEVEL_HIGH",
      "line": "9",
      "linter": "basedpyright",
      "message": "Instance variable "x" is not initialized in the class body or __init__ method",
      "ranges": [
        {
          "filePath": "test_data/basic.in.py",
          "length": "1",
          "offset": "230",
        },
      ],
      "targetType": "python",
    },
  ],
  "lintActions": [
    {
      "command": "lint",
      "fileGroupName": "python",
      "linter": "basedpyright",
      "paths": [
        "test_data/basic.in.py",
      ],
      "verb": "TRUNK_VERB_CHECK",
    },
    {
      "command": "lint",
      "fileGroupName": "python",
      "linter": "basedpyright",
      "paths": [
        "test_data/basic.in.py",
      ],
      "upstream": true,
      "verb": "TRUNK_VERB_CHECK",
    },
  ],
  "taskFailures": [],
  "unformattedFiles": [],
}
`;
