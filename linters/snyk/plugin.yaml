version: 0.1
downloads:
  - name: snyk
    downloads:
      - url: https://downloads.snyk.io/cli/v${version}/snyk-${os}-${cpu}
        cpu: arm_64
        os:
          macos: macos
          linux: linux
      - url: https://downloads.snyk.io/cli/v${version}/snyk-${os}
        cpu: x86_64
        os:
          macos: macos
          linux: linux
      - url: https://downloads.snyk.io/cli/v${version}/snyk-win.exe
        os: windows
tools:
  definitions:
    - name: snyk
      download: snyk
      known_good_version: 1.1295.0
      shims: [snyk]
      health_checks:
        - command: snyk --version
          parse_regex: ${semver}
lint:
  definitions:
    - name: snyk
      tools: [snyk]
      suggest_if: config_present
      description: Security scanning tool for code, dependencies and containers
      known_good_version: 1.1295.0
      commands:
        - name: test
          files: [lockfile]
          output: sarif
          run: snyk test --sarif --skip-unresolved --file=${target}
          success_codes: [0, 1] # Snyk returns 1 when vulnerabilities are found
          read_output_from: stdout
          batch: false
          is_security: true
        - name: code
          files: [javascript, typescript, java, python]
          output: sarif
          run: snyk code test --sarif .
          run_from: ${parent}
          success_codes: [0, 1]
          read_output_from: stdout
          sandbox_type: copy_targets
          batch: true
          is_security: true
        - name: container
          files: [docker]
          output: sarif
          run: snyk container test --sarif ${target}
          success_codes: [0, 1]
          read_output_from: stdout
          batch: true
          is_security: true
      direct_configs: [.snyk]
      environment:
        - name: SNYK_TOKEN
          optional: true
          value: ${env.SNYK_TOKEN}
        - name: PATH
          list: ["${linter}", "${env.PATH}"]
