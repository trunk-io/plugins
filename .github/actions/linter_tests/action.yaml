name: Linter Tests
description: Run tests against plugin linters

inputs:
  linter-version:
    description:
      Versions of linters to run tests against. One of KnownGoodVersion | Latest | Snapshots
    required: false
  cli-version:
    description: Trunk cli version to run test against. Mutually exclusive with `cli-path`
    required: false
  cli-path:
    description: Trunk cli path to run test against. Overrides `cli-version` if set.
    required: false
  path:
    description: The cwd from which to run plugin commands
    required: false
    default: .
  append-args:
    description: Additional args to append to the test invocation
    required: false
    default: linters --
  sourcery-token:
    description: Token to login for sourcery test
    required: true
  trunk-token:
    description: CI debugger api token
    required: true

runs:
  # TODO(Tyler): See if this can be converted to a js action
  using: composite
  steps:
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install packages and specify defaults
      run: |
        echo "CLI_PATH=${{ inputs.cli-path }}" >> "$GITHUB_ENV"

        case "$RUNNER_OS" in
          Linux)
            sudo apt-get update
            sudo apt-get -y install libperl-critic-perl perltidy zlib1g-dev
            ;;
          macOS)
            brew install cpm
            cpm install -g --no-test --color Perl::Critic Perl::Tidy
            brew unlink perl && brew link perl
            ;;
          Windows)
            echo "PLATFORM_APPEND_ARGS=--maxWorkers=5" >> "$GITHUB_ENV"
            if [[ "${{ inputs.cli-path }}" == "" ]]; then
              echo "CLI_PATH=${{ github.workspace }}\trunk.ps1" >> "$GITHUB_ENV"
            fi
            ;;
        esac
      shell: bash

    - name: Install dependencies
      run: npm ci
      shell: bash
      working-directory: ${{ inputs.path }}

    - name: Run plugin tests
      if: runner.os == 'Windows'
      run: npm test ${{ inputs.append-args }} ${{ env.PLATFORM_APPEND_ARGS }} --ci
      shell: bash
      working-directory: ${{ inputs.path }}
      env:
        PLUGINS_TEST_LINTER_VERSION: ${{ inputs.linter-version }}
        PLUGINS_TEST_CLI_VERSION: ${{ inputs.cli-version }}
        PLUGINS_TEST_CLI_PATH: ${{ env.CLI_PATH }}
        SOURCERY_TOKEN: ${{ inputs.sourcery-token }}
        # Debug recurrent eslint circular JSON errors
        DEBUG: Driver:eslint:*,Driver:cspell:*,Driver:nixpkgs-fmt:*

    - name: Run plugin tests
      if: runner.os != 'Windows'
      # trunk-ignore(semgrep/yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha)
      uses: trunk-io/breakpoint@v1.3.0
      with:
        breakpoint-id: trunk-plugins-linter-tests
        shell: bash
        working-directory: ${{ inputs.path }}
        trunk-token: ${{ inputs.trunk-token  }}
        org: trunk-staging-org
        run: npm test ${{ inputs.append-args }} ${{ env.PLATFORM_APPEND_ARGS }} --ci
      env:
        PLUGINS_TEST_LINTER_VERSION: ${{ inputs.linter-version }}
        PLUGINS_TEST_CLI_VERSION: ${{ inputs.cli-version }}
        PLUGINS_TEST_CLI_PATH: ${{ env.CLI_PATH }}
        SOURCERY_TOKEN: ${{ inputs.sourcery-token }}
        DEBUG: Driver:nixpkgs-fmt:*, Driver:eslint:*
