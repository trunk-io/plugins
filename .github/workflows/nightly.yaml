name: Nightly
on:
  schedule:
    # Times in UTC (PST+8), this translates to running Mon-Fri at midnight/1am (depending on DST)
    - cron: 0 8 * * 1-5
  pull_request:
    paths: [.github/workflows/nightly.yaml]
  workflow_dispatch: {}

jobs:
  # TODO(Tyler): Forward json outputs from job
  # Run tests against all linters for snapshots and latest version
  linter_tests:
    name: Plugin Tests
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        linter-version: [Snapshots, Latest]
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        # TODO(Tyler): Iron out ref for tests

      - name: Cache tool downloads
        uses: actions/cache@v3
        with:
          path: /tmp/plugins_testing_download_cache
          # No need to key on trunk version unless we change how we store downloads.
          key: trunk-${{ runner.os }}

      - name: Delete cache
        # For now, avoid deleting cache on pull request changes to nightly. This improves PR experience.
        if: env.TRIGGER != 'pull_request'
        run: |
          if [ -d "/tmp/plugins_testing_download_cache" ]
          then
            tmp_dir=/tmp/${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
            mv "/tmp/plugins_testing_download_cache" ${tmp_dir}
            chmod -R u+w ${tmp_dir}
            rm -rf ${tmp_dir}
          fi
        shell: bash

      - name: Linter Tests
        uses: ./.github/actions/linter_tests
        with:
          linter-version: ${{ matrix.linter-version }}
          append-args: -- --json --outputFile=${{ matrix.os }}-res.json

      - name: Upload Test Outputs for Upload Job
        # Only upload results from latest
        if: matrix.linter-version == 'Latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-test-results
          path: ${{ matrix.os }}-res.json

  upload_test_results:
    name: Upload Test Results
    needs: linter_tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Retrieve Test Outputs ubuntu
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-latest-test-results

      - name: Retrieve Test Outputs macOS
        uses: actions/download-artifact@v3
        with:
          name: macos-latest-test-results

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Sync lfs
        run: git lfs pull

      - name: Install Dependencies
        run: npm ci

      - name: Upload Test Results
        run: npm run parse

  # Run repo healthcheck tests
  repo_tests:
    name: Repo Tests
    uses: ./.github/workflows/repo_tests.reusable.yaml
